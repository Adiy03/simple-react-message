{"version":3,"sources":["forms/AddUserForm.js","forms/EditUserForm.js","tables/UserTable.js","App.js","index.js"],"names":["AddUserForm","props","initialFormState","id","name","username","useState","user","setUser","handleInputChange","event","target","value","onSubmit","preventDefault","addUser","type","onChange","EditUserForm","currentUser","useEffect","updateUser","onClick","setEditing","className","UserTable","users","length","map","editRow","deleteUser","colSpan","App","setUsers","setCurrentUser","editing","updatedUser","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b96da8e0.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst AddUserForm = props => {\n\tconst initialFormState = { id: null, name: '', username: '' }\n\tconst [ user, setUser ] = useState(initialFormState)\n\n\tconst handleInputChange = event => {\n\t\tconst { name, value } = event.target\n\n\t\tsetUser({ ...user, [name]: value })\n\t}\n\n\treturn (\n\t\t<form\n\t\t\tonSubmit={event => {\n\t\t\t\tevent.preventDefault()\n\t\t\t\tif (!user.name || !user.username) return\n\n\t\t\t\tprops.addUser(user)\n\t\t\t\tsetUser(initialFormState)\n\t\t\t}}\n\t\t>\n\t\t\t<label>Name</label>\n\t\t\t<input type=\"text\" name=\"name\" value={user.name} onChange={handleInputChange} />\n\t\t\t<label>Leave your love message here</label>\n\t\t\t<input type=\"text\" name=\"username\" value={user.username} onChange={handleInputChange} />\n\t\t\t<button>Post</button>\n\t\t</form>\n\t)\n}\n\nexport default AddUserForm\n","import React, { useState, useEffect } from 'react'\n\nconst EditUserForm = props => {\n  const [ user, setUser ] = useState(props.currentUser)\n\n  useEffect(\n    () => {\n      setUser(props.currentUser)\n    },\n    [ props ]\n  )\n  // You can tell React to skip applying an effect if certain values havenâ€™t changed between re-renders. [ props ]\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n\n    setUser({ ...user, [name]: value })\n  }\n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault()\n\n        props.updateUser(user.id, user)\n      }}\n    >\n      <label>Name</label>\n      <input type=\"text\" name=\"name\" value={user.name} onChange={handleInputChange} />\n      <label>Message</label>\n      <input type=\"text\" name=\"username\" value={user.username} onChange={handleInputChange} />\n      <button>Update</button>\n      <button onClick={() => props.setEditing(false)} className=\"button muted-button\">\n        Cancel\n      </button>\n    </form>\n  )\n}\n\nexport default EditUserForm\n","import React from 'react'\n\nconst UserTable = props => (\n  <table>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Message</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {props.users.length > 0 ? (\n        props.users.map(user => (\n          <tr key={user.id}>\n            <td>{user.name}</td>\n            <td>{user.username}</td>\n            <td>\n              <button\n                onClick={() => {\n                  props.editRow(user)\n                }}\n                className=\"button muted-button\"\n              >\n                Edit\n              </button>\n              <button\n                onClick={() => props.deleteUser(user.id)}\n                className=\"button muted-button\"\n              >\n                Delete\n              </button>\n            </td>\n          </tr>\n        ))\n      ) : (\n        <tr>\n          <td colSpan={3}>No users</td>\n        </tr>\n      )}\n    </tbody>\n  </table>\n)\n\nexport default UserTable\n","import React, { useState, Fragment } from 'react'\nimport AddUserForm from './forms/AddUserForm'\nimport EditUserForm from './forms/EditUserForm'\nimport UserTable from './tables/UserTable'\n\nconst App = () => {\n\t// Data\n\tconst usersData = [\n\t\t{ id: 1, name: 'Yogo Adi', username: 'Hello World!' },\n\t]\n\n\tconst initialFormState = { id: null, name: '', username: '' }\n\n\t// Setting state\n\tconst [ users, setUsers ] = useState(usersData)\n\tconst [ currentUser, setCurrentUser ] = useState(initialFormState)\n\tconst [ editing, setEditing ] = useState(false)\n\n\t// CRUD operations\n\tconst addUser = user => {\n\t\tuser.id = users.length + 1\n\t\tsetUsers([ ...users, user ])\n\t}\n\n\tconst deleteUser = id => {\n\t\tsetEditing(false)\n\n\t\tsetUsers(users.filter(user => user.id !== id))\n\t}\n\n\tconst updateUser = (id, updatedUser) => {\n\t\tsetEditing(false)\n\n\t\tsetUsers(users.map(user => (user.id === id ? updatedUser : user)))\n\t}\n\n\tconst editRow = user => {\n\t\tsetEditing(true)\n\n\t\tsetCurrentUser({ id: user.id, name: user.name, username: user.username })\n\t}\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h1>Leave Your Message</h1>\n\t\t\t<div className=\"flex-row\">\n\t\t\t\t<div className=\"flex-large\">\n\t\t\t\t\t{editing ? (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<h2>Edit user</h2>\n\t\t\t\t\t\t\t<EditUserForm\n\t\t\t\t\t\t\t\tediting={editing}\n\t\t\t\t\t\t\t\tsetEditing={setEditing}\n\t\t\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\t\t\tupdateUser={updateUser}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<h2>Add message</h2>\n\t\t\t\t\t\t\t<AddUserForm addUser={addUser} />\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-large\">\n\t\t\t\t\t<h2>View message</h2>\n\t\t\t\t\t<UserTable users={users} editRow={editRow} deleteUser={deleteUser} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}